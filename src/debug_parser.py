#!/usr/bin/env python3
"""
debug_parser.py
–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–∞–π—Ç–∞
"""

import asyncio
from playwright.async_api import async_playwright
import os

BASE_URL = "https://xn--80aald4bq.xn--d1aqf.xn--p1ai"

async def debug_parse():
    """–û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ URL
    urls = {
        "all": f"{BASE_URL}/catalog/filter/place_id-is-moskva/apply/?sort=price_asc",
        "liner": f"{BASE_URL}/catalog/filter/place_id-is-moskva/complex_id-is-liner/room-is-studiya-or-1-komnatnaya/price-from-64600-to-113684/apply/?sort=price_asc",
        "simple": f"{BASE_URL}/catalog/"
    }
    
    for mode, url in urls.items():
        print(f"\n{'='*60}")
        print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É—é URL ({mode}): {url}")
        print(f"{'='*60}")
        
        try:
            async with async_playwright() as p:
                browser = await p.chromium.launch(headless=False)  # –í–∫–ª—é—á–∞–µ–º UI –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                
                context = await browser.new_context(
                    user_agent='Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
                )
                
                page = await context.new_page()
                
                print("üì° –ó–∞–≥—Ä—É–∂–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
                await page.goto(url, timeout=60000, wait_until="networkidle")
                
                print("‚è≥ –ñ–¥—É –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
                await asyncio.sleep(5)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                title = await page.title()
                print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {title}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                print("üîç –ò—â—É –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã...")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º Vue –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
                vue_check = await page.evaluate('''
                    () => {
                        const catalogFilter = document.querySelector('.js--catalog-filter');
                        if (catalogFilter && catalogFilter.__vue__) {
                            const vue = catalogFilter.__vue__;
                            return {
                                hasVue: true,
                                hasRenderData: !!(vue.renderData),
                                hasItems: !!(vue.renderData && vue.renderData.items),
                                itemsCount: (vue.renderData && vue.renderData.items) ? vue.renderData.items.length : 0
                            };
                        }
                        return { hasVue: false };
                    }
                ''')
                
                print(f"üé≠ Vue –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: {vue_check}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º DOM —ç–ª–µ–º–µ–Ω—Ç—ã
                dom_check = await page.evaluate('''
                    () => {
                        const selectors = [
                            '.catalog-card',
                            '[class*="card"]',
                            '.layout-card',
                            '.apartment-card',
                            '.flat-card'
                        ];
                        
                        const results = {};
                        for (const selector of selectors) {
                            const elements = document.querySelectorAll(selector);
                            results[selector] = elements.length;
                        }
                        
                        return results;
                    }
                ''')
                
                print(f"üèóÔ∏è DOM —ç–ª–µ–º–µ–Ω—Ç—ã: {dom_check}")
                
                # –ò—â–µ–º —Ç–µ–∫—Å—Ç —Å —Ü–µ–Ω–∞–º–∏
                price_check = await page.evaluate('''
                    () => {
                        const allText = document.body.innerText;
                        const priceMatches = allText.match(/\d+\s*‚ÇΩ/g) || [];
                        return {
                            foundPrices: priceMatches.length,
                            examples: priceMatches.slice(0, 5)
                        };
                    }
                ''')
                
                print(f"üí∞ –ù–∞–π–¥–µ–Ω–æ —Ü–µ–Ω: {price_check}")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                screenshot_path = f"debug_screenshot_{mode}.png"
                await page.screenshot(path=screenshot_path, full_page=True)
                print(f"üì∏ –°–æ—Ö—Ä–∞–Ω–µ–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç: {screenshot_path}")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                html_content = await page.content()
                with open(f"debug_page_{mode}.html", "w", encoding="utf-8") as f:
                    f.write(html_content)
                print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω HTML: debug_page_{mode}.html")
                
                await browser.close()
                
                print(f"‚úÖ –¢–µ—Å—Ç {mode} –∑–∞–≤–µ—Ä—à–µ–Ω")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ {mode}: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –æ—Ç–ª–∞–¥–∫—É –ø–∞—Ä—Å–µ—Ä–∞...")
    asyncio.run(debug_parse())
    print("\nüéâ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã debug_* –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
